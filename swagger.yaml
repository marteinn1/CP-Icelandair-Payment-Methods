openapi: '3.0.0'
info:
  version: '0.0.3'
  title: 'Icelandair Payment Methods'
  description: "Icelandair's custom payment methods to be used by payment orchestrator"
paths:
  /gift_cert/authorize:
    post:
      summary: Authorize the transaction for the gift certificate.
      tags:
        - Gift certificates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificationKey
                - amount
                - currency
                - orderType
                - sessionId
                - timestamps
              properties:
                certificationKey:
                  $ref: '#/components/schemas/certification_key'
                amount: 
                  $ref: '#/components/schemas/amount'
                currency:
                  $ref: '#/components/schemas/currency_code'
                timestamp:
                  $ref: '#/components/schemas/timestamp'
                sessionId:
                  $ref: '#/components/schemas/session_id'
                orderType:
                  $ref: '#/components/schemas/order_type'
      responses:
        '200':
          description: The status and available amount of provided `certificationKey`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gift_cert_authorization_response'
        '404':
          description: No gift certificate found for the provided `certificationKey` or it has expired.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - basicAuth: []
    
  /gift_cert/validate:
    post:
      summary: Get the status and available amount of a provided gift certificate.
      tags:
        - Gift certificates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificationKey
                - sessionId
                - currency
              properties:
                certificationKey:
                  $ref: '#/components/schemas/certification_key'
                currency:
                  $ref: '#/components/schemas/currency_code'
                sessionId:
                  $ref: '#/components/schemas/session_id'
      responses:
        '200':
          description: The status and available amount of provided `certificationKey`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gift_cert_info'
        '404':
          description: No gift certificate found for the provided `certificationKey` or it has expired.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Certificate has expired.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many failed requests for this `sessionId`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - basicAuth: []
    
  /gift_cert/capture:
    post:
      summary: Capture a specified amount from a gift certificate.
      tags:
        - Gift certificates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificationKey
                - amount
                - currencyCode
                - orderType
              properties:
                amount:
                  $ref: '#/components/schemas/amount'
                sessionId:
                  $ref: '#/components/schemas/session_id'
                transactionId:
                  $ref: '#/components/schemas/transaction_id'
      responses:
        '200':
          description: Capture was successful for provided `certificationKey`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capture_id'
        '400':
            description: Some pararameters provided are invalid.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        '401':
            description: Unauthorized.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        '403':
            description: Forbidden.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        '404':
          description: No gift certificate found for the provided `certificationKey`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many invalid requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - basicAuth: []
  /gift_cert/refund:
    post:
      summary: Refund amount to a gift certificate.
      tags:
        - Gift certificates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificationKey
                - amount
                - currencyCode
                - sessionId
              properties:
                certificationKey:
                  $ref: '#/components/schemas/certification_key'
                amount:
                  $ref: '#/components/schemas/amount'
                currencyCode:
                  $ref: '#/components/schemas/currency_code'
                orderId:
                  $ref: '#/components/schemas/order_id'
                sessionId:
                  $ref: '#/components/schemas/session_id'
                timestamp:
                  $ref: '#/components/schemas/timestamp'
      responses:
        '200':
          description: Amount successfully refunded to provided `certificationKey`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Refund successful"
        '404':
          description: No gift certificate found for the provided `certificationKey`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - basicAuth: []
  /gift_cert/void:
    post:
      summary: Void a transaction that has been authorized
      tags:
        - Gift certificates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transactionId
                - sessionId
              properties:
                transactionId:
                  $ref: '#/components/schemas/transaction_id'
                sessionId:
                  $ref: '#/components/schemas/session_id' 
      responses:
        '200':
          description: Transaction successfully voided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Transaction void successful"
        '404':
          description: No transaction found for the provided `transactionId`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - basicAuth: []

  /points/authorize:
    post: 
      summary: Authorize points redemption
      tags:
        [Points]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/points_authorize_request'
      responses: 
        '200':
          description: Points successfully captured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capture_id'
        '404':
          description: No frequent flyer account found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -basicAuth: []

  /points/capture:
    post:
      summary: Withdraw points from a logged-in frequent flyer account.
      tags:
        - Points
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accessToken
                - frequentFlyerNumber
                - orderType
                - pointsToCapture
                - monetaryValueOfPointsToCapture
                - currencyCode
              properties:
                accessToken:
                  $ref: '#/components/schemas/access_token'
                frequentFlyerNumber:
                  $ref: '#/components/schemas/frequent_flyer_number'
                orderType:
                  $ref: '#/components/schemas/order_type'
                pointsToCapture:
                  $ref: '#/components/schemas/amount'
                monetaryValueOfPointsToCapture:
                  $ref: '#/components/schemas/amount'
                currencyCode:
                  $ref: '#/components/schemas/currency_code'
                amountNotPaidByPoints:
                  $ref: '#/components/schemas/amount'
      responses:
        '200':
          description: Points successfully captured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capture_id'
        '404':
          description: No frequent flyer account found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - basicAuth: []
  /points/refund:
    post:
      summary: Refund points to a frequent flyer account.
      tags:
        [Points]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - capture_id
                - frequent_flyer_number
                - order_type
                - points_to_refund
                - monetary_value_of_points_to_refund
                - currency_code
              properties:
                captureId:
                  $ref: '#/components/schemas/capture_id'
                frequentFlyerNumber:
                  $ref: '#/components/schemas/frequent_flyer_number'
                orderType:
                  $ref: '#/components/schemas/order_type'
                pointsToRefund:
                  $ref: '#/components/schemas/amount'
                monetaryValueOfPointsToRefund:
                  $ref: '#/components/schemas/amount'
                currency:
                  $ref: '#/components/schemas/currency_code'
      responses:
        '200':
          description: Amount successfully refunded to the provided frequent flyer account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Refund successful"
        '404':
          description: No frequent flyer account found for the provided `frequent_flyer_number`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - basicAuth: []
components:
  schemas:
    certification_key:
      type: string
      pattern: '^[A-Z0-9]{8}$'
      description: The unique 8-character identifier of a gift certificate, consisting of both letters and numbers.

    amount:
      type: number
      format: double
      description: Monetary amount in the specified currency.

    currency_code:
      type: string
      enum: [ISK, USD, GBP, EUR, CAD, NOK, SEK, DKK, CHF]
      pattern: '^[A-Z]{3}$'
      description: 3-letter ISO currency code.

    is_valid:
      type: boolean
      description: Indicates whether the gift certificate is valid for use.

    order_id:
      type: string
      pattern: '^[A-Z0-9]{6}$'
      description: Identifier from the system selling a service or product, like a flight booking Record Locator/PNR.

    order_type:
      type: string
      enum: [flight_booking, package_booking, gift_certificate, carbon_offset, ancillaries, other]
      description: Type of the order to be paid for.

    capture_id:
      type: string
      description: Transaction ID in the payment or gift certificate system.

    access_token:
      type: string
      description: Token from Icelandair's authentication service for accessing frequent flyer information.

    frequent_flyer_number:
      type: string
      description: Unique identifier for a frequent flyer.

    first_name:
      type: string
      description: First name of the frequent flyer.

    last_name:
      type: string
      description: Last name of the frequent flyer.

    points_balance:
      type: number
      format: double
      description: Number of points in the frequent flyer account.

    monetary_balance:
      type: number
      format: double
      description: Monetary value equivalent of the points balance.

    points_exchange_rate:
      type: number
      format: double
      description: Exchange rate to convert points to monetary value.

    tier:
      type: string
      enum: [Blue, Silver, Gold]
      description: Membership tier of the frequent flyer account.

    transaction_id:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      description: UUID provided for the transaction, used for rollback and capture

    timestamp:
      type: string
      pattern: '^20[2-5][1-9]-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (0\d|1\d|2[0-3]):([0-5]\d):([0-5]\d)\.\d{3}$'
      description: Timestamp on the format "yyyy-MM-dd hh:mm:ss.SSS" example - 2024-03-12 14:48:17.023

    expiration:
      type: string
      pattern: '^20[2-5][1-9]-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (0\d|1\d|2[0-3]):([0-5]\d):([0-5]\d)\.\d{3}$'
      description: Timestamp for when the transaction is no longer valid

    session_id:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      description: Session id provided by Icelandair when user is sent to cellpoint.

    transaction:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        expiration:
          $ref: '#/components/schemas/expiration'
      required: 
        - transaction_id
      description: Information about the transaction


    gift_cert_info:
      type: object
      properties:
        amountAvailable:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency_code'
        isValid:
          type: boolean
        certificationKey:
          $ref: '#/components/schemas/certification_key'
      required: [certificationKey, isValid, amountAvailable, currencyCode]
      description: Detailed information about a gift certificate.

    gift_cert_authorization_response:
      type: object
      properties:
        amountAvailable:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency_code'
        isValid:
          type: boolean
        certificationKey:
          $ref: '#/components/schemas/certification_key'
        transaction:
          $ref: '#/components/schemas/transaction'
      required: [certificationKey, isValid, amountAvailable, currency, transaction]
      description: Information about the authorization with the transactionId which is used for the capture or void.

    points_authorization_response:
      type: object
      properties:
        transaction:
          $ref: '#/components/schemas/transaction'
      required: [transaction]
      description: Information about the authorization with the transactionId which is used for the capture or void.
      
    frequent_flyer_info:
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/first_name'
        lastName:
          $ref: '#/components/schemas/last_name'
        pointsBalance:
          $ref: '#/components/schemas/points_balance'
        monetaryBalance:
          $ref: '#/components/schemas/monetary_balance'
        pointsExchangeRate:
          $ref: '#/components/schemas/points_exchange_rate'
        frequentFlyerNumber:
          $ref: '#/components/schemas/frequent_flyer_number'
        tier:
          $ref: '#/components/schemas/tier'
      required: [first_name, last_name, points_balance, monetary_balance, points_exchange_rate, frequent_flyer_number, tier]
      description: Information about a frequent flyer account.
      
    points_authorize_request:
      type: object
      properties:
        orderType:
          $ref: '#/components/schemas/order_type'
        sessionId:
          $ref: '#/components/schemas/session_id'
        order:
          $ref: '#/components/schemas/membership'

    ticket_segment:
      type: object
      properties:
        departure:
          type: object
          properties:
            iata_code:
              type: string
            at:
              type: string
          required:
            - iata_code
            - at
        arrival:
          type: object
          properties:
            iata_code:
              type: string
            at:
              type: string
          required:
            - iata_code
            - at
        carrier_code:
          type: string
        number:
          type: string
        suffix:
          type: string
        booking_class:
          type: string
        operating:
          type: object
          properties:
            booking_class:
              type: string
        booked_at:
          type: string

    tax:
      type: object
      properties:
        monetary_amount:
          type: string
        currency:
          type: string
        indicator:
          type: string
        rate:
          type: string

    payment_method:
      type: object
      properties:
        method:
          type: string
        amount:
          type: string
        currency:
          type: string

    ticket:
      type: object
      properties:
        monetary_amount:
          type: string
        issuance_date:
          type: string
        currency:
          type: string
        base:
          type: object
          properties:
            monetary_amount:
              type: string
            currency:
              type: string
        taxes:
          $ref: '#/components/schemas/tax'
        other_payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/payment_method'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/ticket_segment'

    membership:
      type: object
      properties:
        points_amount:
          type: string
        membership_id:
          type: string
        monetary_equivalent_amount:
          type: string
        monetary_equivalent_currency:
          type: string
        ticket:
          $ref: '#/components/schemas/ticket'

    Error:
      type: object
      properties:
        message:
          type: string
          description: A human-readable error message indicating the nature of the error.
      required: [message]

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Username + Password authentication. Must be included in the header of requests.
